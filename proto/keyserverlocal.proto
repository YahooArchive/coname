// Copyright 2014-2015 The Dename Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not
// use this file except in compliance with the License. You may obtain a copy of
// the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations under
// the License.

syntax = "proto3";
package proto;
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "replication.proto";

// ReplicaState contains the persistent internal state of a single replica.
// Additional on-disk state is descried in server/table.go.
message ReplicaState {
	// cached values derived purely from the state of the log
	uint64 next_index_log = 1; // index of the next replicated state machine input to be processed
	uint64 next_index_verifier = 2; // index for the next RSM input to be given to verifiers (this MUST be deterministic because verifiers see it through new indices)
	bytes previous_summary_hash = 3;
	EpochDelimiter last_epoch_delimiter = 4 [(gogoproto.nullable) = false];
	bool this_replica_needs_to_sign_last_epoch = 5;
	bool pending_updates = 6; // are there any updates after the last epoch delimiter?

	// local variables
	uint64 latest_tree_snapshot = 7; // NOTE: this might be deterministic, but we definitely shouldn't rely on that
	bool last_epoch_needs_ratification = 8;
}
